package com.geoteam.geostory;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

import org.json.JSONObject;


import android.support.v7.app.ActionBarActivity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

public class ViewStoryActivity extends ActionBarActivity implements ServerCommunicatorListener  {

	
	private TextView getStoryTitleView;
	private TextView getStoryTextView;
	private	EditText enterStoryId;
	private Button getStoryButton;
	private GeoStory currentStory;
	private AsyncServerCommuncator communicator = new AsyncServerCommuncator();

	
	//Activities that tie into intents throughout the app.
	
	//Return story from server.
	private void getStory(){
		try {
			int id = Integer.parseInt(enterStoryId.getText().toString());
			getStory(id);
		} catch (NumberFormatException e) {
			enterStoryId.setText("");
			getStoryTitleView.setText("Invalid ID");
			getStoryTextView.setText("");
		}
		
	}
	
	private void getStory(int id){
    	//execute.
    	communicator.executeGetStoryByIdAction(id);
	}
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_view_story);
		//register to communicator
		communicator.registerListener(ViewStoryActivity.this);
		
		getStoryTitleView = (TextView) findViewById(R.id.StoryTitle);
		getStoryTextView = (TextView) findViewById(R.id.storyText);
		enterStoryId = (EditText) findViewById(R.id.enterStoryId);

		getStoryButton = (Button) findViewById(R.id.getButton);
		getStoryButton.setOnClickListener(new View.OnClickListener() {
            @Override
			public void onClick(View v) {
            	getStory();
            }
        });
		
		try{
			Bundle params = getIntent().getExtras();
			int storyId = params.getInt("storyId");
			
			if (storyId > 0 ){
				getStory(storyId);
				
			}
			
		} catch (NullPointerException e){
			//don't auto load a story
			
		}
	}

		
		
	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.view_story, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}


	@Override
	public void onServerJSONResponse(JSONObject serverResponse) {
		currentStory = AsyncServerCommuncator.interpretGetStoryByIdAction(serverResponse);
		runOnUiThread( new Runnable() {
			@Override
			public void run() {
				getStoryTitleView.setText(currentStory.getTitle());
				getStoryTextView.setText(currentStory.getText());
				communicator.downloadImage(currentStory.getPhotoUrl());
			}
		});
		
	}



	@Override
	public void onServerImageResponse(File serverResponse) {
		final File imageFile = serverResponse;

		//convert file to byte array
	    final byte[] fileInBytes = new byte[(int) imageFile.length()];
	    
	    InputStream inputStream = null;
	    try {
	    
	        inputStream = new FileInputStream(imageFile);
	        
	        inputStream.read(fileInBytes);
	        inputStream.close();
	    } catch (IOException e) {
	    	//error
			e.printStackTrace();
			return;
		} 

	    //Used to send photo to server
	    //Increase the size (But NOT resolution)
	    //And display on screen.
		currentStory.setPhotoByteArray(fileInBytes);
		runOnUiThread( new Runnable() {
			@Override
			public void run() {
				if(imageFile.exists()){
					 Bitmap bitmap = BitmapFactory.decodeByteArray(fileInBytes , 0, fileInBytes.length);
					 ImageView myImage = (ImageView) findViewById(R.id.storyImage);
					 myImage.setImageBitmap(bitmap);

				}
				//set image
			}
		});
		
	}
}
